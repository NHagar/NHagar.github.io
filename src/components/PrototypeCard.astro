---
// src/components/PrototypeCard.astro
import type { CollectionEntry } from "astro:content";
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets"; // For optimized images

interface Props {
    item: CollectionEntry<"prototypes">["data"];
}

const { item } = Astro.props;
const hasImage = item.image && item.image.startsWith("/");
---

<div
    class="bg-background p-0 rounded-xl border border-border-color/50 shadow-lg hover:shadow-depth-md transition-all duration-300 ease-in-out transform hover:-translate-y-1 flex flex-col h-full overflow-hidden"
>
    {
        hasImage && (
            <a
                href={item.link}
                target={item.link.startsWith("http") ? "_blank" : "_self"}
                rel="noopener noreferrer"
                class="block aspect-video overflow-hidden"
            >
                <Image
                    src={item.image!}
                    alt={`Thumbnail for ${item.name}`}
                    width={600}
                    height={338}
                    format="webp"
                    quality={80}
                    class="w-full h-full object-cover transition-transform duration-300 ease-in-out group-hover:scale-105"
                />
            </a>
        )
    }
    <div class="p-6 flex flex-col flex-grow">
        <div class="flex-grow">
            <h3 class="text-xl font-semibold text-text-primary mb-2">
                <a
                    href={item.link}
                    target={item.link.startsWith("http") ? "_blank" : "_self"}
                    rel="noopener noreferrer"
                    class="hover:text-primary-accent transition-colors"
                >
                    {item.name}
                    {
                        item.link.startsWith("http") && (
                            <Icon
                                name="mdi:open-in-new"
                                class="w-4 h-4 inline-block ml-1 text-text-secondary group-hover:text-primary-accent"
                            />
                        )
                    }
                </a>
            </h3>
            <p class="text-sm text-text-secondary leading-relaxed mb-4">
                {item.description}
            </p>
        </div>

        <div class="mt-auto pt-4">
            {
                item.tags && item.tags.length > 0 && (
                    <div class="mb-3 flex flex-wrap gap-2">
                        {item.tags.map((tag) => (
                            <span class="text-xs bg-light-accent text-primary-accent/80 px-2 py-1 rounded-full font-medium">
                                {tag}
                            </span>
                        ))}
                    </div>
                )
            }
            <a
                href={item.link}
                target={item.link.startsWith("http") ? "_blank" : "_self"}
                rel="noopener noreferrer"
                class="text-sm text-primary-accent hover:underline font-semibold inline-flex items-center group"
            >
                View Prototype
                <Icon
                    name="mdi:arrow-right"
                    class="w-4 h-4 ml-1 transition-transform duration-200 ease-in-out group-hover:translate-x-1"
                />
            </a>
        </div>
    </div>
</div>
