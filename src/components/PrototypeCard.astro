---
import type { CollectionEntry } from "astro:content";
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";

interface Props {
    item: CollectionEntry<"prototypes">["data"];
}

const { item } = Astro.props;
const hasImage = item.image && item.image.startsWith("/");
---

<div class="group relative h-full">
    <!-- Card content -->
    <div class="bg-white rounded-lg border-academic shadow-card hover:shadow-lg transition-all duration-300 overflow-hidden h-full flex flex-col">
        {hasImage && (
            <a
                href={item.link}
                target={item.link.startsWith("http") ? "_blank" : "_self"}
                rel="noopener noreferrer"
                class="block relative aspect-video overflow-hidden bg-gray-50"
            >
                <Image
                    src={item.image!}
                    alt={`Thumbnail for ${item.name}`}
                    width={600}
                    height={338}
                    format="webp"
                    quality={80}
                    class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                />
                
                <!-- View indicator -->
                <div class="absolute bottom-4 right-4 p-2 rounded-lg bg-white/90 text-primary-600 opacity-0 group-hover:opacity-100 transition-all duration-300">
                    <Icon name="mdi:eye" class="w-5 h-5" />
                </div>
            </a>
        )}
        
        <div class="p-6 flex flex-col flex-grow">
            <div class="flex-grow">
                <h3 class="text-xl font-semibold text-text-primary mb-3 academic-heading">
                    <a
                        href={item.link}
                        target={item.link.startsWith("http") ? "_blank" : "_self"}
                        rel="noopener noreferrer"
                        class="inline-flex items-center gap-2 group-hover:text-primary-600 transition-colors duration-300"
                    >
                        <span class="relative">
                            {item.name}
                        </span>
                        {item.link.startsWith("http") && (
                            <Icon
                                name="mdi:open-in-new"
                                class="w-4 h-4 opacity-0 group-hover:opacity-100 transition-all duration-300"
                            />
                        )}
                    </a>
                </h3>
                <p class="text-sm text-text-secondary leading-relaxed mb-4 academic-text">
                    {item.description}
                </p>
            </div>

            <div class="mt-auto">
                {item.tags && item.tags.length > 0 && (
                    <div class="mb-4 flex flex-wrap gap-2">
                        {item.tags.map((tag) => (
                            <span class="text-xs px-3 py-1 rounded-full bg-gray-100 text-primary-700 font-medium border border-gray-200">
                                {tag}
                            </span>
                        ))}
                    </div>
                )}
                
                <a
                    href={item.link}
                    target={item.link.startsWith("http") ? "_blank" : "_self"}
                    rel="noopener noreferrer"
                    class="inline-flex items-center gap-2 text-sm font-semibold text-primary-600 hover:text-primary-700 transition-colors duration-300"
                >
                    <span>Explore Prototype</span>
                    <Icon
                        name="mdi:arrow-right"
                        class="w-4 h-4 transition-transform duration-300 group-hover:translate-x-1"
                    />
                </a>
            </div>
        </div>
    </div>
</div>